[{"id":0,"title":"创建 Worker 函数","content":"#\n\n一个将函数放在 Worker 中运行的方法, 源码:","routePath":"/base/guides/basic/createWorkerFunc","lang":"","toc":[],"domain":"","frontmatter":{},"version":""},{"id":1,"title":"总览","content":"#\n\n * 日志管理\n * 创建一个在 Worker 中运行的函数","routePath":"/base/guides/basic/","lang":"","toc":[],"domain":"","frontmatter":{},"version":""},{"id":2,"title":"日志管理","content":"#\n\n一个日志管理工具, 源码:","routePath":"/base/guides/basic/logger","lang":"","toc":[],"domain":"","frontmatter":{},"version":""},{"id":3,"title":"介绍","content":"#\n\n@cmtlyt/base 只是一个我的第一个工程, 之后还会有更多的工程被创建, 并且所有有价值的工具方法都会被放到这个包里, 大家可以多关注喔~\n\n大家先上车后补票哈, 文档我会慢慢更新上来的","routePath":"/base/guides/","lang":"","toc":[],"domain":"","frontmatter":{},"version":""},{"id":4,"title":"数组相关方法","content":"#\n\n\ngetArray#\n\n参数归一化为数组\n\n类型声明\n\n\n\n必填   参数      说明   类型    默认值\n     value   数组   any   \n\n返回值: array\n\n示例\n\n\n\n\ngetArraySlice#\n\n获取数组切片\n\n类型声明\n\n\n\n必填   参数      说明     类型       默认值\n*    array   数组     any[]    \n     size    切片大小   number   \n\n返回值: array\n\n示例\n\n","routePath":"/base/guides/utils/array","lang":"","toc":[{"text":"getArray","id":"getarray","depth":3,"charIndex":3},{"text":"getArraySlice","id":"getarrayslice","depth":3,"charIndex":105}],"domain":"","frontmatter":{},"version":""},{"id":5,"title":"缓存相关方法","content":"#\n\n\ncacheByReturn#\n\n缓存函数返回值\n\n类型声明\n\n\n\n必填   参数          说明       类型   默认值\n*    cacheLoad   缓存加载函数   F    -\n\n返回值: TCacheByReturnType\n\n示例\n\n","routePath":"/base/guides/utils/cache","lang":"","toc":[{"text":"cacheByReturn","id":"cachebyreturn","depth":3,"charIndex":3}],"domain":"","frontmatter":{},"version":""},{"id":6,"title":"常量","content":"#\n\n\nEMPTY#\n\n空对象\n\n类型声明\n\n","routePath":"/base/guides/utils/constant","lang":"","toc":[{"text":"EMPTY","id":"empty","depth":3,"charIndex":3}],"domain":"","frontmatter":{},"version":""},{"id":7,"title":"日期相关","content":"#","routePath":"/base/guides/utils/date","lang":"","toc":[],"domain":"","frontmatter":{},"version":""},{"id":8,"title":"函数式编程相关","content":"#\n\n\ncurry#\n\n将普通函数转换为柯里化函数\n\n> 不放类型声明了，太过复杂\n\n必填   参数名   类型         说明        默认值\n*    fn    TAnyFunc   需要转换的函数   -\n\n返回值: 柯里化后的函数\n\n示例\n\n\n\n\ncompose#\n\n组合函数，从右到左执行\n\n> 不放类型声明了，太过复杂\n\n必填   参数名     类型           说明        默认值\n*    funcs   TAnyFunc[]   需要组合的函数   -\n\n返回值: 组合后的函数\n\n示例\n\n\n\n\npipe#\n\n组合函数，从左到右执行\n\n> 不放类型声明了，太过复杂\n\n必填   参数名     类型           说明        默认值\n*    funcs   TAnyFunc[]   需要组合的函数   -\n\n返回值: 组合后的函数\n\n示例\n\n","routePath":"/base/guides/utils/fp","lang":"","toc":[{"text":"curry","id":"curry","depth":3,"charIndex":3},{"text":"compose","id":"compose","depth":3,"charIndex":134},{"text":"pipe","id":"pipe","depth":3,"charIndex":272}],"domain":"","frontmatter":{},"version":""},{"id":9,"title":"总览","content":"#\n\n * 常量\n * 数组相关方法\n * 缓存相关方法\n * 日期相关方法\n * 函数式编程相关\n * 时序相关方法\n * 字符串相关方法\n * 校验相关方法","routePath":"/base/guides/utils/","lang":"","toc":[],"domain":"","frontmatter":{},"version":""},{"id":10,"title":"时序相关方法","content":"#\n\n\ndebounce#\n\n函数防抖\n\n类型声明\n\n\n\n参数\n\n必填   参数名           说明                 类型        默认值\n*    func          要防抖的函数             F         -\n     time          防抖时间，默认为 100ms     number    100\n     immediately   是否立即执行，默认为 false   boolean   false\n\n返回值: (...args: TArgsType) => void\n\n示例\n\n\n\n\nthrottle#\n\n函数节流\n\n类型声明\n\n\n\n参数\n\n必填   参数名           说明                类型        默认值\n*    func          要节流的函数            F         -\n     time          节流时间，默认为 100ms    number    100\n     immediately   是否立即执行，默认为 true   boolean   true\n\n返回值: (...args: TArgsType) => void\n\n示例\n\n","routePath":"/base/guides/utils/sequential","lang":"","toc":[{"text":"debounce","id":"debounce","depth":3,"charIndex":3},{"text":"throttle","id":"throttle","depth":3,"charIndex":283}],"domain":"","frontmatter":{},"version":""},{"id":11,"title":"字符串相关方法","content":"#\n\n\ngetRandomString#\n\n获取指定长度的随机字符串\n\n类型声明\n\n\n\n必填   参数    说明      类型       默认值\n     len   字符串长度   number   8\n\n返回值: string\n\n示例\n\n\n\n\ncreateLinkByString#\n\n将传入的字符串转化为 blob 地址\n\n类型声明\n\n\n\n必填   参数         说明     类型       默认值\n*    resource   资源内容   string   -\n\n返回值: string\n\n示例\n\n\n\n\ngenerateCookieInfo#\n\n生成 cookie 信息\n\n类型声明\n\n\n\n必填   参数        说明          类型               默认值\n     options   cookie 配置   ICookieOptions   {}\n\n返回值: string\n\n示例\n\n\n\n\ngenerateClassName#\n\n生成 className\n\n类型声明\n\n\n\n必填   参数     说明   类型                       默认值\n*    args   类名   string|string[]|Record   -\n\n返回值: string\n\n示例\n\n","routePath":"/base/guides/utils/string","lang":"","toc":[{"text":"getRandomString","id":"getrandomstring","depth":3,"charIndex":3},{"text":"createLinkByString","id":"createlinkbystring","depth":3,"charIndex":126},{"text":"generateCookieInfo","id":"generatecookieinfo","depth":3,"charIndex":266},{"text":"generateClassName","id":"generateclassname","depth":3,"charIndex":425}],"domain":"","frontmatter":{},"version":""},{"id":12,"title":"校验相关方法","content":"#\n\n\nisNull#\n\n判断是否为 null\n\n类型声明\n\n\n\n参数\n\n必填   参数名     类型    描述      默认值\n*    value   any   待判断的值   -\n\n返回值: boolean\n\n示例\n\n\n\n\nisNaN#\n\n判断是否为 NaN\n\n类型声明\n\n\n\n参数\n\n必填   参数名     类型    描述      默认值\n*    value   any   待判断的值   -\n\n返回值: boolean\n\n示例\n\n\n\n\nisNumber#\n\n判断是否为数字\n\n类型声明\n\n\n\n参数\n\n必填   参数名     类型    描述      默认值\n*    value   any   待判断的值   -\n\n返回值: boolean\n\n示例\n\n\n\n\nisPromise#\n\n判断是否为 Promise\n\n类型声明\n\n\n\n参数\n\n必填   参数名     类型    描述      默认值\n*    value   any   待判断的值   -\n\n返回值: boolean\n\n示例\n\n\n\n\ngetType#\n\n获取值类型\n\n类型声明\n\n\n\n参数\n\n必填   参数名     类型    描述      默认值\n*    value   any   待判断的值   -\n\n返回值: string\n\n示例\n\n\n\n\nisEmpty#\n\n判断是否为空\n\n类型声明\n\n\n\n参数\n\n必填   参数名     类型    描述      默认值\n*    value   any   待判断的值   -\n\n返回值: boolean\n\n示例\n\n\n\n\nisFile#\n\n判断是否为文件\n\n类型声明\n\n\n\n参数\n\n必填   参数名     类型    描述      默认值\n*    value   any   待判断的值   -\n\n返回值: boolean\n\n示例\n\n\n\n\nisBlob#\n\n判断是否为 Blob\n\n类型声明\n\n\n\n参数\n\n必填   参数名     类型    描述      默认值\n*    value   any   待判断的值   -\n\n返回值: boolean\n\n示例\n\n\n\n\nisHttpUrlString#\n\n判断是否为 http 链接字符串\n\n类型声明\n\n\n\n参数\n\n必填   参数名     类型    描述      默认值\n*    value   any   待判断的值   -\n\n返回值: boolean\n\n示例\n\n\n\n\nisBlobUrlString#\n\n判断是否为 blob 链接字符串\n\n类型声明\n\n\n\n参数\n\n必填   参数名     类型    描述      默认值\n*    value   any   待判断的值   -\n\n返回值: boolean\n\n示例\n\n\n\n\nisDataUrlString#\n\n判断是否为 data 链接字符串\n\n类型声明\n\n\n\n参数\n\n必填   参数名     类型    描述      默认值\n*    value   any   待判断的值   -\n\n返回值: boolean\n\n示例\n\n\n\n\nisUrl#\n\n判断是否为 url\n\n类型声明\n\n\n\n参数\n\n必填   参数名     类型    描述      默认值\n*    value   any   待判断的值   -\n\n返回值: boolean\n\n示例\n\n","routePath":"/base/guides/utils/verify","lang":"","toc":[{"text":"isNull","id":"isnull","depth":3,"charIndex":3},{"text":"isNaN","id":"isnan","depth":3,"charIndex":118},{"text":"isNumber","id":"isnumber","depth":3,"charIndex":231},{"text":"isPromise","id":"ispromise","depth":3,"charIndex":345},{"text":"getType","id":"gettype","depth":3,"charIndex":466},{"text":"isEmpty","id":"isempty","depth":3,"charIndex":576},{"text":"isFile","id":"isfile","depth":3,"charIndex":688},{"text":"isBlob","id":"isblob","depth":3,"charIndex":800},{"text":"isHttpUrlString","id":"ishttpurlstring","depth":3,"charIndex":915},{"text":"isBlobUrlString","id":"isbloburlstring","depth":3,"charIndex":1045},{"text":"isDataUrlString","id":"isdataurlstring","depth":3,"charIndex":1175},{"text":"isUrl","id":"isurl","depth":3,"charIndex":1305}],"domain":"","frontmatter":{},"version":""},{"id":13,"title":"更新日志记录","content":"#\n\n\n日志标识总览#\n\n * (O) 对象\n * (D) 目录\n * (F) 函数\n * (I) 接口\n * (CV) 常量\n * -> 别名\n\n\nv0.5.2#\n\n新增\n\n * (F) createPool\n * (F) getPool\n\n修复\n\n * 部分类型修复\n\n优化\n\n * createUploader 使用 createPool 管理上传任务，并增加可配置参数\n\n\nv0.5.1#\n\n修复\n\n * 修复 isHttpUrlString 无法识别 // 开头链接的问题\n\n\nv0.5.0#\n\n新增\n\n * (F) createUploader\n * (D) utils\n   * (F) isFile\n   * (F) isBlob\n   * (F) isHttpUrlString\n   * (F) isBlobUrlString\n   * (F) isDataUrlString\n   * (F) isUrl\n   * (F) getArraySlice\n\n修复\n\n * logger 类型错误，及内部参数赋值错误\n * string 模块类型修复\n * 移除多余类型声明\n * createWorkerFunc 类型完善\n\n新增\n\n * createWorkerFunc 监听用户自己发送的事件\n\n备注\n\n * 如果 createWorkerFunc 第三个参数的 needPost 配置项被设置为 true 后，会改变 func 的第一个参数为\n   postMessage 函数，如果需要使用，请注意！！！\n\n\nv0.4.2#\n\n新增\n\n * (D) utils\n   * (F) isEmpty\n\n修复\n\n * 大范围类型修复\n * 修复 pipe 和 compose 写反了的问题\n * 修复 isEmpty 部分类型判断错误问题\n\n修改\n\n * generateCookieInfo 增加可配置参数\n\n\nv0.4.1#\n\n新增\n\n * (D) utils\n   * (F) getType\n\n修改\n\n * Calculator 的 valueOf 方法改为计算器的等于运算符，并新增 getCurrValue 来获取当前值，但不计算最终结果\n\n\n\n修复\n\n * 大范围类型修复\n\n\nv0.4.0#\n\n新增\n\n * (F) curry\n * (F) compose\n * (F) pipe\n\n警告\n\ncompose 和 pipe 类型存在缺陷，只能判断最后输入的函数是否满足条件，不能判断中间的函数\n也就是说从前往后传入函数可以正确判断类型，但是如果是在中间插入函数就不行，而且对于柯理化后的函数，只能判断第一个参数的类型\n\n\nv0.3.3#\n\n修复\n\n * 修复 clipboard.paste 返回类型不统一问题\n\n\nv0.3.2#\n\n修复\n\n * 修复 getArray 类型提示中返回类型错误问题\n\n\nv0.3.1#\n\n修复\n\n * 修复调用 getArray 出现找不到 isNull 的问题\n\n\nv0.3.0#\n\n新增\n\n * (O) cookie\n   * (F) get\n   * (F) set\n   * (F) remove\n * (D) utils\n   * (F) generateCookieInfo\n   * (F) generateClassName -> gc\n\n\nv0.2.0#\n\n新增\n\n * (F) createStorePool\n * (C) DefaultStoreController\n * (I) IStoreController\n * (C) EventEmitter\n * (C) CustomEvent\n * (O) clipboard\n   * (F) copy\n   * (F) paste\n   * (F) clear\n * (C) Calculator\n * (D) utils\n   * (F) debounce\n   * (F) throttle\n   * (F) isNumber\n   * (F) isNaN\n   * (F) isPromise\n\n\nv0.1.0#\n\n新增\n\n * (F) createWorkerFunc\n * (C) Logger\n * (D) utils\n   * (F) getArray\n   * (F) cacheByReturn\n   * (F) formatDate\n   * (F) getRandomString\n   * (F) createLinkByString\n   * (F) isNull\n * (CV) EMPTY","routePath":"/base/history","lang":"","toc":[{"text":"日志标识总览","id":"日志标识总览","depth":3,"charIndex":3},{"text":"v0.5.2","id":"v052","depth":3,"charIndex":74},{"text":"v0.5.1","id":"v051","depth":3,"charIndex":190},{"text":"v0.5.0","id":"v050","depth":3,"charIndex":243},{"text":"v0.4.2","id":"v042","depth":3,"charIndex":667},{"text":"v0.4.1","id":"v041","depth":3,"charIndex":816},{"text":"v0.4.0","id":"v040","depth":3,"charIndex":955},{"text":"v0.3.3","id":"v033","depth":3,"charIndex":1127},{"text":"v0.3.2","id":"v032","depth":3,"charIndex":1174},{"text":"v0.3.1","id":"v031","depth":3,"charIndex":1218},{"text":"v0.3.0","id":"v030","depth":3,"charIndex":1267},{"text":"v0.2.0","id":"v020","depth":3,"charIndex":1412},{"text":"v0.1.0","id":"v010","depth":3,"charIndex":1723}],"domain":"","frontmatter":{},"version":""},{"id":15,"title":"","content":"","routePath":"/base/playground/","lang":"","toc":[],"domain":"","frontmatter":{},"version":""}]